@startuml class diagram

' User

entity User {
  + firstName : String
  + lastName : String
  + username : String 
  + email : String
  + password : String 
  + profileImage : String
  + isAdmin : boolean
  + role : String <"CLIENT", "FREELANCER">
  + profile : ObjectId
}

entity ClientProfile {
  + companyName : String
  + companySize : String <"SMALL", "MEDIUM", "LARGE">
  + industry : String
  + companyDescription : String
  + website : String
  + location : ObjectId 
}

entity FreelancerProfile {
  + profileSummary : String
  + skills : Skill[*]
  + technologies : Technology[*]
  + experienceLevel : String <"ENTRY-LEVEL", "MID-LEVEL", "SENIOR">
  + hourlyRate : Object { min, max, currency }
  + portfolio : PortfolioItem[*] 
  + isAvailable : boolean
  + specializations : String[*]
  + languages : Language[*]
  + education : Education[*]
  + certifications : Certification[*]
  + workExperience : WorkExperience[*] 
}

entity PortfolioItem {
  + title : String
  + description : String
  + url : String
}

entity Language {
  + language : String
  + proficiencyLevel : String
}

entity Education {
  + degreeName : String
  + fieldOfStudy : String
  + institution : String
  + graduationYear : Integer
}

entity Certification {
  + name : String
  + issuingOrganization : String
  + issueDate : Date
} 

entity WorkExperience {
  + companyName : String
  + jobTitle : String
  + startDate : Date
  + endDate : Date 
  + jobDescription : String
}

entity Location {
  + city : String
  + state : String <"SP"> 
  + country : String <"Brazil">
}

' Project

entity Project {
    + clientId : ObjectId 
    + freelancerId : ObjectId 
    + ProjectCategory : ProjectCategory <<Emb>>
    + skills : Skill[*] <<Emb>>
    + technologies : Technology[*] <<Emb>>
    + requirements : Requirement[*] <<Emb>>
    + ProjectTitle : String
    + ProjectDescription : String
    + hourlyRateLowerBound : double
    + hourlyRateUpperBound : double
    + isFixedRate: boolean
    + fixedBudget : double
    + estimatedDuration : int
    + ProjectSize : String <"SMALL", "MEDIUM", "LARGE"> 
    + status : String <"DRAFT", "POSTED">
    + experienceLevel : String <"ENTRY-LEVEL", "MID-LEVEL", "SENIOR">
    + startDate : Date
    + endDate : Date
    + isRemote : boolean
    + location : Location
}

entity ProjectCategory {
   + categoryName : String
   + categoryDescription : String
}

entity Requirement {
  + title : String
  + description : String
  + requirementType : String <"SOURCE_CODE", "DOCUMENTATION", "TEST_REPORT">
}

entity Technology {
   + technologyName : String
   + technologyDescription : String
} 

entity Skill {
    + skillName : String
    + skillDescription : String
}

entity Proposal {
    + freelancerId: ObjectId
    + ProjectId: ObjectId
    + isFixedRate: boolean
    + fixedPrice: double 
    + proposedHourlyRate: double 
    + estimatedHours: int
    + estimatedDuration: date
    + proposalStatus: String <"PENDING", "ACCEPTED", "DECLINED">
    + coverLetter: String
}

' Relationships

User --o  "1" ClientProfile : has one
User --o  "1" FreelancerProfile: has one

ClientProfile --o "1" Location : located in
FreelancerProfile --o "1" Location : located in

Project "1" o-- "*" Skill : requires many
Project "1" *-- "*" Requirement : has many
Project "*" o-- "*" Technology : uses many
Project "*" o-- "1" ProjectCategory : belongs to one

Proposal "1" -- "1" FreelancerProfile : by
Proposal "1" -- "1" Project : for

ClientProfile "1" -- "*" Project : posts

FreelancerProfile "1" -- "*" Language : knows
FreelancerProfile "1" -- "*" Project : works on 
FreelancerProfile "1" -- "1" Education : has one
FreelancerProfile "1" -- "*" Skill : has many
FreelancerProfile "1" -- "*" Certification : has many
FreelancerProfile "1" -- "*" WorkExperience : has many
FreelancerProfile "1" -- "*" PortfolioItem : has many

@enduml