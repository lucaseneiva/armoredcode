@startuml
class User {
    - username: String
    - email: String
    - password: String
    - role: String ["CLIENT", "FREELANCER"]
    + register(username, email, password, role)
    + login(email, password)
    + sendEmail(email)
    + resetPassword(token, password)
    + getAllUsers()
    + getById(id)
    + getUserRole(id)
    + updateUser(id, username, email)
    + deleteUser(id)
}

class UserToken {
    - userId: ObjectId
    - token: String
    - createdAt: Date
}

class FreelancerProfile {
    - userId: ObjectId
    - profileImage: String
    - firstName: String
    - lastName: String
    - specializationId: ObjectId
    - profileSummary: String
    - experienceLevel: String ["JUNIOR", "MID-LEVEL", "SENIOR"]
    - hourlyRate: HourlyRate
    - isAvailable: Boolean
    - location: Location
    - skillIds: ObjectId[]
    - portfolioItems: PortfolioItem[]
    - educations: Education[]
    - certifications: Certification[]
    - workExperiences: WorkExperience[]
    + createProfile(profileData)
    + getProfileByUserId(id)
    + updateProfile(profileData)
    + deleteProfile()
    + getAllFreelancerProfiles()
    + searchFreelancers(q, skillIds, experienceLevel, specializationId)
}

class ClientProfile {
    - userId: ObjectId
    - companyName: String
    - companyDescription: String
    - companySize: String ["SMALL", "MEDIUM", "LARGE"]
    - profileImage: String
    - industryId: ObjectId
    - website: String
    - location: Location
    + createProfile(profileData)
    + getProfileByUserId(id)
    + updateProfile(profileData)
    + deleteProfile()
}

class HourlyRate {
    - min: Number
    - max: Number
    - currency: String
}

class Budget {
    - min: Number
    - max: Number
    - currency: String
}

class Location {
    - streetAddress: String
    - neighborhood: String
    - city: String
    - state: String
    - cep: String
    - country: String
}

class Skill {
    - skillName: String
    - skillDescription: String
    + getSkills()
    + getSkillById(id)
    + createSkill(skillData)
}

class Specialization {
    - specializationName: String
    - specializationDescription: String
    + getSpecializations()
    + getSpecializationById(id)
    + createSpecialization(specializationData)
}

class Industry {
    - name: String
    - description: String
    + getIndustries()
    + getIndustryById(id)
    + createIndustry(industryData)
}


class ProjectCategory {
    - categoryName: String
    - categoryDescription: String
    + getProjectCategories()
    + getProjectCategoryById(id)
    + createProjectCategory(categoryData)
}

class Project {
    - clientId: ObjectId
    - freelancerId: ObjectId
    - projectCategoryId: ObjectId
    - skillIds: ObjectId[]
    - projectTitle: String
    - projectDescription: String
    - projectHourlyRate : HourlyRate
    - projectBudget : Budget
    - pricingType : String ["BUDGET", "HOURLY-RATE"]
    - estimatedDuration: Number
    - projectSize: String ["SMALL", "MEDIUM", "LARGE"]
    - projectStatus: String ["DRAFT", "POSTED", 'IN-PROGRESS', 'COMPLETED', 'CANCELLED']
    - experienceLevel: String ["ENTRY-LEVEL", "MID-LEVEL", "SENIOR"]
    - workModel: String ["REMOTE", "HYBRID", "ON-SITE"]
    - location: Location
    - chatChannelId: ObjectId
    - startDate: Date
    - endDate: Date
    + getProjectById(id)
    + createProject(projectData)
    + updateProject(id, updateData)
    + deleteProject(id)
    + getUserProjects()
    + getPostedProjects()
    + getPostedUserProjects()
    + searchProjects(q, category, skillIds)
}

class Proposal {
    - projectId: ObjectId
    - freelancerId: ObjectId
    - clientId: ObjectId
    - coverLetter: String
    - pricingType : String ["BUDGET", "HOURLY-RATE"]
    - proposedBudget: Number
    - proposedHourlyRate: Number
    - estimatedDuration: Number
    - status: String ["DRAFT", "PENDING", "ACCEPTED", "REJECTED"]
    - ChatChannelId: ObjectId
    + createProposal(proposalData)
    + getProposalsByProjectId(projectId)
    + getProposalById(id)
    + updateProposal(id, updateData)
    + deleteProposal(id)
    + acceptProposal(id)
    + rejectProposal(id)
    + getFreelancerProposals(freelancerId)
}

class ChatChannel {
    - projectId: ObjectId
    - freelancerId: ObjectId
    - clientId: ObjectId
    - messages: Message[]
    - isActive: Boolean
    + createChatChannel(projectId, freelancerId, clientId)
    + getChatChannelById(id)
    + sendMessage(id, content)
    + getUserChatChannels()
}

class Message {
    - senderId: ObjectId
    - content: String
    - timestamp: Date
}

class Notification {
    - freelancerId: ObjectId
    - clientId: ObjectId
    - projectId: ObjectId
    - message: String
    - timestamp: Date
    - status: String ["PENDING", "ACCEPTED", "REJECTED"]
    - isRead: Boolean
    + createNotification(projectId, freelancerId, clientId, message)
    + getInviteById(id)
    + getFreelancerNotifications(freelancerId)
    + markNotificationAsRead(id)
}

class Rating {
  - projectId: ObjectId
  - evaluatorId: ObjectId
  - evaluatedId: ObjectId
  - evaluatorType: String ["CLIENT", "FREELANCER"]
  - workQuality: Number
  - communication: Number
  - professionalism: Number
  - costBenefit: Number
  - clarityDescription: Number
  - payments: Number
  - feedback: Number
  - comment: String
  + createRating(ratingData)
  + getProjectRatings(projectId)
}


User "1" -- "1" UserToken
FreelancerProfile "1" -- "1" User
ClientProfile "1" -- "1" User
FreelancerProfile "1" -- "1" Location
ClientProfile "1" -- "1" Location
FreelancerProfile "1" *-- "*" Skill
FreelancerProfile "1" -- "1" Specialization
ClientProfile "1" -- "1" Industry
Project "1" -- "1" ClientProfile
Project "1" -- "0..1" FreelancerProfile
Project "1" -- "1" ProjectCategory
Project "1" *-- "*" Skill
Project "0..1" -- "1" ChatChannel
Project "1" -- "1" HourlyRate : projectHourlyRate
Project "1" -- "1" Budget : projectBudget
Proposal "1" -- "1" Project
Proposal "1" -- "1" FreelancerProfile
Proposal "1" -- "1" ClientProfile
Proposal "0..1" -- "1" ChatChannel
Proposal "1" -- "1" HourlyRate : proposedHourlyRate
Proposal "1" -- "1" Budget : proposedBudget
ChatChannel *-- "*" Message
Notification "1" -- "1" FreelancerProfile
Notification "1" -- "1" ClientProfile
Notification "0..1" -- "1" Project
Rating "1" -- "1" Project
Rating "1" -- "1" User : evaluatorId
Rating "1" -- "1" User : evaluatedId


@enduml