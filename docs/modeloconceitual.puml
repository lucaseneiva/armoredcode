@startuml ModeloConceitual

entity Job {
    + JobId : ObjectId 
    + ClientId : ObjectId 
    + FreelancerId : ObjectId 
    + JobCategory : JobCategory <<Emb>>
    + Skills : Skill[*] <<Emb>>
    + Technologies : Technology[*] <<Emb>>
    + Requirements : Requirement[*] <<Emb>>
    + JobTitle : String
    + JobDescription : String
    + HourlyRateLowerBound : double
    + HourlyRateUpperBound : double
    + IsFixedRate: boolean
    + FixedBudget : double
    + EstimatedDuration : int
    + JobSize : String <"SMALL", "MEDIUM", "LARGE"> 
    + Status : String <"DRAFT", "POSTED">
    + ExperienceLevel : <"ENTRY-LEVEL", "MID-LEVEL", "SENIOR">
    + StartDate : Date
    + EndDate : Date
    + IsRemote : boolean
    + City : String <"SOROCABA", "VOTORANTIM", "ITU", "ARAÃ‡OIABA DA SERRA", "PORTO FELIZ">
}

entity JobCategory {
   + CategoryId : ObjectId
   + CategoryName : String
   + CategoryDescription : String
}

entity Requirement {
  + RequirementId : ObjectId
  + Title : String
  + Description : String
  + RequirementType : String <"SOURCE_CODE", "DOCUMENTATION", "TEST_REPORT", >
}

entity Technology {
   + TechnologyId : ObjectId
   + TechnologyName : String
   + TechnologyDescription : String
} 

entity Skill {
    + SkillId : ObjectId
    + SkillName : String
    + SkillDescription : String
}

entity FreelancerProfile {
    + FreelancerId : ObjectId
    + UserId : ObjectId
    + ProfileSummary : String
    + ServiceOfferingBlurb : String
    + AvailabilityStatus : enum {"Available", "Partially Available", "Not Available"}
    + ExperienceLevel : enum {"Beginner", "Intermediate", "Expert"} 
    + IsPremium : boolean
    + HourlyRate : double
    + RateCurrency : String
    + ResumeDocumentUrl : String
}

entity SecuritySpecialization {
    + SpecializationId : ObjectId 
    + SpecializationName : String
    + SpecializationDescription : String
}


entity Certification {
    + CertificationId : ObjectId 
    + CertificationName : String
    + CertificationProvider : String
    + CertificationDate : date
}

entity WorkExperience {
    + ExperienceId : ObjectId
    + FreelancerId : ObjectId
    + CompanyName : String
    + JobTitle : String
    + StartDate : date
    + EndDate : date
    + JobDescription : String
}

entity WorkSample {
    + WorkSampleId : ObjectId
    + FreelancerId : ObjectId
    + SampleTitle : String
    + SampleDescription : String
    + SampleUrl : String [URL or file path to the sample work]
}

entity Verification {
    + VerificationId : ObjectId
    + FreelancerId : ObjectId
    + VerificationType : enum { ID, ADDRESS, PHONE, PAYMENT}
    + VerificationDate : Date
    + VerificationNotes : String
}

entity ClientProfile {
    + ClientId : ObjectId
    + UserId : ObjectId
    + CompanyName : String
    + CompanySize : enum {"Small", "Medium", "Large"}
}

entity Proposal {
    + ProposalId: ObjectId
    + FreelancerId: ObjectId
    + JobId: ObjectId
    + ProposalType: enum {"FixedPrice", "Hourly"}
    + FixedPrice: double [Optional]
    + ProposedHourlyRate: double [Optional]
    + EstimatedHours: int [Optional]
    + EstimatedDuration: date
    + ProposalStatus: enum {"Draft", "Submitted", "Pending", "UnderReview", "Accepted", "Declined", "Negotiation", "Withdrawn", "Expired", "RevisionRequested", "ContractPending"}
    + CoverLetter: String
    + CreatedAt: Date
    + UpdatedAt: Date
}

entity Chat {
    + ChatId : ObjectId
    + JobId : ObjectId
    + ChatTitle : String
    + CreatedTimestamp : Date
}

entity ChatMessage {
    + MessageId : ObjectId
    + ChatId : ObjectId
    + SenderId : ObjectId
    + RecipientId : ObjectId
    + MessageText : String
    + SentTimestamp : Date
}

entity ChatFile {
    + FileId : ObjectId
    + MessageId : ObjectId
    + FileName : String
    + FileType : String
    + FileContent : Binary
    + UploadedTimestamp : Date
}

entity Notification {
    + NotificationId : ObjectId
    + RecipientId : ObjectId
    + NotificationType : enum {Job_ACCEPTED, PROPOSAL_RECEIVED, PROPOSAL_ACCEPTED, PROPOSAL_DECLINED, Job_CANCELLED, NEW_CHAT_MESSAGE}
    + NotificationMessage : String
    + SentTimestamp : Date
}


entity PaymentMethod {
    + PaymentMethodId : ObjectId
    + PaymentMethodType : enum {e.g., "Credit Card", "PayPal", "Bank Transfer"}
    + PaymentDetails : String [Optional placeholder for future expansion]
}

entity User {
    + userId : ObjectId
    + firstName : String
    + lastName : String
    + username : String
    + email : String
    + password : String
    + profileImage : String
    + isAdmin : boolean
    + createdAt : Date
    + updatedAt : Date
}

entity Role {
    + roleId : ObjectId
    + roleName : String [e.g "Freelancer", "Client", "Admin"]
    + roleDescription : String
}

entity Education {
   + EducationId : ObjectId
   + FreelancerId : ObjectId
   + DegreeName : String
   + FieldOfStudy : String
   + Institution : String
   + GraduationYear : int
}

entity Language {
   + LanguageId : ObjectId
   + LanguageName : String
   + ProficiencyLevel : enum {"Beginner", "Intermediate", "Advanced", "Fluent"}
   + IsNative : boolean
}

entity SuccessRate {
    + SuccessRateId : ObjectId
    + SuccessfulJobs : int
    + TotalJobs : int
    + CalculatedRate : double
}

entity JobReview {
    + ReviewId : ObjectId
    + JobId : ObjectId
    + ClientComment : String
    + FreelancerComment : String
}

entity Location {
  + LocationId : ObjectId
  + City : String
  + State : String
  + Country : String 
}

Job "1" o-- "*" Skill : requires many
Job "1" *-- "*" Requirement : has many
Job "*" o-- "*" Technology : uses many
Job "*" o-- "1" JobCategory : belongs to one
Job "*" -- "*" Chat : has many

ClientProfile "1" -- "1" Location : lives in
FreelancerProfile "1" -- "1" Location : lives in 

JobReview "1" -- "1" Job : review for

' Constraint: A JobReview can only be created once per Job, after the Job is marked as "COMPLETED".
' Constraint: Both ClientComment and FreelancerComment must be provided to create a JobReview.

SuccessRate "*" -- "1" FreelancerProfile : success rate for
SuccessRate "*" -- "1" ClientProfile : success rate for

FreelancerProfile "1" -- "*" Language : knows

User "1" -- "*" Role : has many
User "1" -- "1" ClientProfile : has one
User "1" -- "1" FreelancerProfile : has one

FreelancerProfile "1" -- "*" PaymentMethod : has many
ClientProfile "1" -- "*" PaymentMethod : has many 

Notification "*" -- "1" FreelancerProfile : sent by
Notification "*" -- "1" ClientProfile : sent to


Chat "1" -- "*" ChatMessage : has
ChatMessage "1" -- "*" ChatFile : has many
ChatMessage "*" -- "1" FreelancerProfile : sent by
ChatMessage "*" -- "1" ClientProfile : sent by
FreelancerProfile "*" -- "*" Chat : participates in many
ClientProfile "*" -- "*" Chat : participates in many

Proposal "1" -- "1" FreelancerProfile : by
Proposal "1" -- "1" Job : for

ClientProfile "1" -- "*" Job : posts


FreelancerProfile "1" -- "*" Job : works on 
FreelancerProfile "1" -- "*" Verification : has many
FreelancerProfile "1" -- "1" Education : has one
FreelancerProfile "1" -- "1" SecuritySpecialization : has one
FreelancerProfile "1" -- "*" Skill : has many
FreelancerProfile "1" -- "*" Certification : has many
FreelancerProfile "1" -- "*" WorkExperience : has many


FreelancerProfile "1" -- "*" WorkSample : has many

@enduml